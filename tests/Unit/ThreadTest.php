<?php

namespace Tests\Unit;

use App\Models\Chanel;
use App\Models\Reply;
use App\Models\Thread;
use App\Models\User;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\TestCase;

class ThreadTest extends TestCase
{
    use DatabaseMigrations;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->thread = Thread::factory()->create();
    }

    /**
     * @return void
     * @test
     */
    public function it_has_replies()
    {
        Reply::factory()->for($this->thread)->count(5)->create();

        $this->assertCount(5,$this->thread->replies);
    }

    /**
     * @return void
     * @test
     */
    public function it_can_add_reply()
    {
        $reply = Reply::factory()->for($this->thread)->raw();

        $this->thread->addReply($reply);

        $this->assertCount(1,$this->thread->replies);
    }

    /**
     * @return void
     * @test
     */
    public function it_has_a_creator()
    {
        $this->assertInstanceOf(User::class,$this->thread->creator);
    }

    /**
     * @return void
     * @test
     */
    public function it_belongs_to_a_chanel()
    {
        $this->assertInstanceOf(Chanel::class , $this->thread->chanel);
    }

    /**
     * @return void
     * @test
     */
    public function it_can_create_a_path()
    {
        $this->assertEquals(
            "threads/{$this->thread->chanel->slug}/{$this->thread->id}",
            $this->thread->path()
        );
    }
}
